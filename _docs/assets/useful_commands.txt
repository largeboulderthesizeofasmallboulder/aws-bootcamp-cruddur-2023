docker run --rm -p 4567:4567 -it  -e FRONTEND_URL='*' -e BACKEND_URL='*' backend-flask
docker ps


export HONEYCOMB_API_KEY="wCBuBsDel2lEBiGYLX5tcH"  or
gp env HONEYCOMB_API_KEY="wCBuBsDel2lEBiGYLX5tcH"

export HONEYCOMB_SERVICE_NAME="Cruddur"  or
gp env HONEYCOMB_API_KEY="Cruddur"



export ROLLBAR_ACCESS_TOKEN="7079b81140634079af13ef3395c86855"
gp env ROLLBAR_ACCESS_TOKEN="7079b81140634079af13ef3395c86855"

REACT_AWS_PROJECT_REGION=
REACT_APP_AWS_COGNITO_IDENTITY_POOL_ID=
REACT_APP_AWS_COGNITO_REGION=
REACT_APP_AWS_USER_POOLS_ID=
REACT_APP_CLIENT_ID=


aws rds create-db-instance \
  --db-instance-identifier cruddur-db-instance \
  --db-instance-class db.t3.micro \
  --engine postgres \
  --engine-version  14.6 \
  --master-username cruddurroot \
  --master-user-password {}\
  --allocated-storage 20 \
  --availability-zone us-east-1a \
  --backup-retention-period 0 \
  --port 5432 \
  --no-multi-az \
  --db-name cruddur \
  --storage-type gp2 \
  --publicly-accessible \
  --storage-encrypted \
  --enable-performance-insights \
  --performance-insights-retention-period 7 \
  --no-deletion-protection


  local: psql -Upostgres cruddur -h localhost < db/schema.sql

  export CONNECTION_URL="postgresql://postgres:password@localhost:5432/cruddur"
  gp env CONNECTION_URL="postgresql://postgres:password@localhost:5432/cruddur"

  gp env PROD_CONNECTION_URL="postgresql://cruddurroot:{password}@cruddur-db-instance.catkcirvffk8.us-east-1.rds.amazonaws.com:5432/cruddur" 


aws ec2 modify-security-group-rules \
    --group-id $DB_SG_ID \
    --security-group-rules "SecurityGroupRuleId=$DB_SG_RULE_ID,SecurityGroupRule={Description=GITPOD,IpProtocol=tcp,FromPort=5432,ToPort=5432,CidrIpv4=$GITPOD_IP/32}"


    export DB_SG_ID=""
    gp env DB_SG_ID=""
    export DB_SG_RULE_ID=""
    gp env DB_SG_RULE_ID=""

log to ecr aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin "$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com"

export DEFAULT_VPC_ID=$(aws ec2 describe-vpcs \
--filters "Name=isDefault, Values=true" \
--query "Vpcs[0].VpcId" \
--output text)
echo $DEFAULT_VPC_ID

aws ecs execute-command  \
--region $AWS_DEFAULT_REGION \
--cluster cruddur \
--task 0ee311a843b149489eff86dc8eca5867 \
--container backend-flask \
--command "/bin/bash" \
--interactive

curl "https://s3.amazonaws.com/session-manager-downloads/plugin/latest/ubuntu_64bit/session-manager-plugin.deb" -o "session-manager-plugin.deb"
sudo dpkg -i session-manager-plugin.deb

export DEFAULT_VPC_ID=$(aws ec2 describe-vpcs \
--filters "Name=isDefault, Values=true" \
--query "Vpcs[0].VpcId" \
--output text)
echo $DEFAULT_VPC_ID

export DEFAULT_SUBNET_IDS=$(aws ec2 describe-subnets  \
 --filters Name=vpc-id,Values=$DEFAULT_VPC_ID \
 --query 'Subnets[*].SubnetId' \
 --output json | jq -r 'join(",")')
echo $DEFAULT_SUBNET_IDS

aws ecs list-tasks --cluster cruddur

aws ecs create-service --cli-input-json file://aws/json/service-backend-flask.json


docker build \
--build-arg REACT_APP_BACKEND_URL="https://api.writeand.click" \
--build-arg REACT_APP_AWS_PROJECT_REGION="$AWS_DEFAULT_REGION" \
--build-arg REACT_APP_AWS_COGNITO_REGION="$AWS_DEFAULT_REGION" \
--build-arg REACT_APP_AWS_USER_POOLS_ID="us-east-1_PaCaWCGSC" \
--build-arg REACT_APP_CLIENT_ID="19kfkj5dv37e7blnvl5rc8qvl6" \
-t frontend-react-js \
-f Dockerfile.prod \
.

cruddur-alb-1933488571.us-east-1.elb.amazonaws.com




aws ecr create-repository \
  --repository-name frontend-react-js \
  --image-tag-mutability MUTABLE